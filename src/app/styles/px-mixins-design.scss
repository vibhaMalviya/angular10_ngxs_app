/*
 * Copyright (c) 2018, General Electric
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

////
/// PX-MIXINS-DESIGN
/// Sass mixins
/// @group px-mixins-design
////

@import "px-defaults-design.scss";


/// @name inuit-font-size
/// @param {Number} $inuit-font-size - Font size in pixels
/// @param {Number} $inuit-line-height [auto] - Line height in pixels
/// @output Convert pixel font size into rem based, with appropriate line-height.
@mixin inuit-font-size($inuit-font-size, $inuit-line-height: auto) {
  font-size: ($inuit-font-size / $inuit-base-font-size) * 1rem;

  @if $inuit-line-height == auto {
    line-height: ceil($inuit-font-size / $inuit-base-line-height) * ($inuit-base-line-height / $inuit-font-size);
  }

  @else {

    @if (type-of($inuit-line-height) == number or $inuit-line-height == inherit or $inuit-line-height == normal) {
      line-height: $inuit-line-height / $inuit-font-size;
    }

    @else if ($inuit-line-height != none and $inuit-line-height != false) {
      @warn "D’oh! ‘#{$inuit-line-height}’ is not a valid value for `line-height`."
    }

  }

}


/// @name border-right-left
/// @param {String} $inuit-border-position - Left or right border
/// @param {Color} $inuit-border-color [inherit] - Border color
/// @param {Number} $inuit-border-width [1px] - Border width
/// @param {String} $inuit-border-style - CSS border style value
/// @output Switch around horizontal borders when `dir=rtl` in HTML
@mixin border-right-left($inuit-border-position, $inuit-border-color: inherit, $inuit-border-width: 1px, $inuit-border-style: solid) {
  border-#{$inuit-border-position}: $inuit-border-width $inuit-border-style $inuit-border-color;
  &:last-child {
    border-#{$inuit-border-position}-width: 0;
  }
  [dir=rtl] & {
    &:first-child {
      border-#{$inuit-border-position}-width: 0;
    }
    &:last-child {
      border-#{$inuit-border-position}-width: $inuit-border-width;
    }
  }
}


/// @name font-face
/// @param {String} $font-family - Name of font family @font-face will use
/// @param {String} $file-path - Path to webfont file
/// @param {String} $weight [normal] - CSS Font weight value
/// @param {String} $style [normal] - CSS Font style value
/// @param {String} $font-display [auto] - CSS Font font-display value
/// @output Generate various required paths etc for use with `@font-face`
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $font-display: auto) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;
    font-display: $font-display;
    src: url('#{$file-path}.eot');
    src: url('#{$file-path}.eot?#iefix')               format('embedded-opentype'),
    url('#{$file-path}.woff2')                     format('woff2'),
    url('#{$file-path}.woff')                     format('woff'),
    url('#{$file-path}.ttf')                      format('truetype'),
    url('#{$file-path}.svg##{$font-family}')      format('svg');
  }
}
